<?php

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Add additional form elements to the main CCL add/edit form.
 */
function ccl_local_actions_form_ccl_add_form_alter(&$form, &$form_state, $form_id) {
  // Check if we are in edit mode
  if (isset($form_state['clid'])) {
    $clid = $form_state['clid'];
    $link = $form_state['link'];
  }
  else {
    $clid = 0;
  }

  // Add blocks as an option for links.
  $form['options_group']['ccl_type']['#options']['local_action'] = t('Local Action');

  $form['options_group']['la_title'] = array(
    '#type' => 'item', 
    '#title' => t('Visibility settings'),
      '#states' => array(
      'visible' => array(
        ':input[name="ccl_type"]' => array('value' => 'local_action'),
      ),
    ),

  );
  
  // Visibility settings.
  $form['options_group']['la'] = array(
    '#type' => 'container', 
    '#states' => array(
      'visible' => array(
        ':input[name="ccl_type"]' => array('value' => 'local_action'),
      ),
    ),
  );
  $form['options_group']['la']['#attached']['library'][] = array('system', 'ui.accordion');
  $form['options_group']['la']['#attached']['js'][] = array(
    'data' => '(function($){$(function() { $("#edit-la").accordion({autoHeight: false,
      navigation: true}); })})(jQuery);',
    'type' => 'inline',
  );

  // Per-path visibility.
  $form['options_group']['la']['page_title'] = array(
    '#markup' => '<h5><a href="#">' . t('Pages') . '</a></h5>', 
  );

  $options = array(
    0 => t('All pages except those listed'), 
    1 => t('Only the listed pages'),
  );  
  $form['options_group']['la']['la_visibility'] = array(
    '#type' => 'radios', 
    '#title' => t('Show link on specific pages'), 
    '#options' => $options, 
    '#default_value' => ($clid && isset($link->options['la_visibility'])) ? $link->options['la_visibility'] : 1,
    '#prefix' => '<div>',
  );
  $form['options_group']['la']['la_pages'] = array(
    '#type' => 'textarea', 
    '#default_value' => ($clid && isset($link->options['la_pages'])) ? $link->options['la_pages'] : '',
    '#description' => t("Specify pages by using their paths. Enter one path per line. The '*' character is a wildcard. Example paths are %blog for the blog page and %blog-wildcard for every personal blog. %front is the front page.", array('%blog' => 'blog', '%blog-wildcard' => 'blog/*', '%front' => '<front>')),
    '#suffix' => '</div>',
  );

  $form['options_group']['la']['ct_title'] = array(
    '#markup' => '<h5><a href="#">' . t('Content Types') . '</a></h5>', 
  );
  
  $form['options_group']['la']['la_types'] = array(
    '#type' => 'checkboxes', 
    '#title' => t('Show link for specific content types'), 
    '#default_value' => ($clid && isset($link->options['la_types'])) ? $link->options['la_types'] : array(),
    '#options' => node_type_get_names(), 
    '#description' => t('Show this link only on pages that display content of the given type(s). If you select no types, there will be no type-specific limitation.'),
    '#prefix' => '<div>',
    '#suffix' => '</div>',
  );

  // Per-role visibility.
  $role_options = array_map('check_plain', user_roles());
  $form['options_group']['la']['roles_title'] = array(
    '#markup' => '<h5><a href="#">' . t('Roles') . '</a></h5>', 
  );
  $form['options_group']['la']['la_roles'] = array(
    '#type' => 'checkboxes', 
    '#title' => t('Show link for specific roles'), 
    '#default_value' => ($clid && isset($link->options['la_roles'])) ? $link->options['la_roles'] : array(),
    '#options' => $role_options, 
    '#description' => t('Show this link only for the selected role(s). If you select no roles, the link will be visible to all users.'),
    '#prefix' => '<div>',
    '#suffix' => '</div>',
  );
}

/**
 * Custom validation for the block options
 */
// function ccl_blocks_validation($form, &$form_state) {
//   $values = $form_state['values'];

//   // Check that the node id token is not used for blocks
//   if ($values['ccl_type'] == 'block' && strpos($values['ccl_link'], '[node:') !== FALSE) {
//     form_set_error('ccl_link', t('Node tokens are not processed for links added to blocks.'));
//   }
// }

/**
 * Hook function to process the contextual links element
 */
// function ccl_blocks_ccl_add_link($element, $dest) {
//   // Check if it is a block
//   if (isset($element['#element']['#block']->delta)) {
//     $bid = $element['#element']['#block']->module . '|' . $element['#element']['#block']->delta;
//     $block_cache = ccl_cache_get('ccl_blocks');

//     // Global Blocks
//     foreach ($block_cache['global'] as $id => $link) {
//       if ($processed_link = _ccl_prepare_link($link, $dest)) {
//         $element['#links']['ccl-global-block-' . $id] = $processed_link;
//       }
//     }

//     // Individual blocks
//     if (in_array($bid, array_keys($block_cache['ids']))) {
//       foreach ($block_cache['ids'][$bid] as $id => $link) {
//         if ($processed_link = _ccl_prepare_link($link, $dest)) {
//           $element['#links']['ccl-block-' . $id] = $processed_link;
//         }
//       }
//     }
//   }
//   return $element;
// }

/**
 * Hook function triggered by the chache update routine of the main module.
 */
// function ccl_blocks_ccl_cache_update() {
//   $blocks = db_query("SELECT * FROM {ccl} WHERE type = :type", array(':type' => 'block'));
//   $block_cache = array('global' => array(), 'ids' => array());
//   foreach ($blocks as $block) {
//     $block->options = unserialize($block->options);
//     $advanced = array();
//     if (isset($block->options['advanced_css'])) {
//       $advanced['class'] = $block->options['advanced_css'];
//     }
//     if (isset($block->options['advanced_query'])) {
//       $advanced['query'] = $block->options['advanced_query'];
//     }

//     if ($block->options['block_global']) {
//       $block_cache['global'][] = array('title' => $block->title, 'href' => $block->link, 'advanced' => $advanced);
//     }
//     else {
//       $block_cache['ids'][$block->options['block_select']][] = array('title' => $block->title, 'href' => $block->link, 'advanced' => $advanced);
//     }
//   }
//   cache_set('ccl_blocks', $block_cache);
// }

/**
 * Hook function to provide link option information for the link list page.
 */
function ccl_local_actions_ccl_link_info($record) {
  if ($record->type == 'local_action') {
    $options_return = array(
      'desc' => '',
      'op' => l(t('Edit'), 'admin/config/user-interface/ccl/' . $record->clid . '/edit') . ' | ' . l(t('Delete'), 'admin/config/user-interface/ccl/' . $record->clid . '/delete')
    );

    $options = unserialize($record->options);

    if ($options['la_visibility']) {
      $options_return['desc'] = t('Only displayed on specific pages.');
    }
    else {
      $options_return['desc'] = t('Displayed on all pages with exceptions.');
    }
    $clean = array_filter($options['la_types']);
    if (!empty($clean)) {
      $options_return['desc'] .= t(' Limited by content type.');  
    }
    $clean = array_filter($options['la_roles']);
    if (!empty($clean)) {
      $options_return['desc'] .= t(' Limited by user roles.');  
    }
    return $options_return;
  }
  else {
    return "";
  }
}
